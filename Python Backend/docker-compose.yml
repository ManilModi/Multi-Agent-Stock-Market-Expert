x-airflow-common:
  &airflow-common
  build: .
  # image: apache/airflow:2.9.1-python3.9  # don't need this if using build
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins

services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-webserver:
    <<: *airflow-common
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      - airflow-init
      - postgres

  airflow-scheduler:
    <<: *airflow-common
    restart: always
    command: scheduler
    depends_on:
      - airflow-init
      - postgres

  airflow-init:
    <<: *airflow-common
    restart: on-failure
    entrypoint: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    depends_on:
      - postgres

  mongo:
    image: mongo:5
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  minio:
    image: minio/minio
    restart: always
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"    # S3 API
      - "9001:9001"    # MinIO console
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    volumes:
      - minio_data:/data

  grafana:
    image: grafana/grafana:10.2.3
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./configs/grafana_dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json

volumes:
  postgres_data:
  mongo_data:
  minio_data:
